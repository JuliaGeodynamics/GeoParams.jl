import{_ as n,C as r,c as o,o as d,aA as p,j as a,G as i,a as t,w as l}from"./chunks/framework.Peizq498.js";const h="/GeoParams.jl/previews/PR275/assets/LaTeX_table.1KyHe6BZ.PNG",u="/GeoParams.jl/previews/PR275/assets/markdown_table.BxH-Ehhd.PNG",x=JSON.parse('{"title":"Tables","description":"","frontmatter":{},"headers":[],"relativePath":"man/tables.md","filePath":"man/tables.md","lastUpdated":null}'),k={name:"man/tables.md"},c={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""};function E(P,e,T,F,j,w){const s=r("Badge");return d(),o("div",null,[e[24]||(e[24]=p(`<h1 id="tables" tabindex="-1">Tables <a class="header-anchor" href="#tables" aria-label="Permalink to &quot;Tables&quot;">​</a></h1><p>There are two different formats of output tables that can be produced:</p><ul><li><p>LaTeX (always comes with &quot;References.bib&quot; for citations)</p></li><li><p>Markdown</p></li></ul><h1 id="Producing-output-table" tabindex="-1">Producing output table <a class="header-anchor" href="#Producing-output-table" aria-label="Permalink to &quot;Producing output table {#Producing-output-table}&quot;">​</a></h1><p><code>ParameterTable()</code> is used to produce an output table of all the material parameters in your phase(s) in LaTeX or Markdown format. All you need is a dimensional <code>phase</code> as defined in section 2. Material Parameters in the README.md of GeoParams. This <code>phase</code> should be given to <code>ParameterTable</code> as first argument. There are optional arguments which can be given in <code>ParameterTable</code>. Those are <code>format</code>, <code>filename</code> and <code>rdigits</code>. The <code>format</code> keyword determines whether your table should be in <code>LaTeX</code> or <code>Markdown</code> format (should be given as string). <code>filename</code> determines the name of the file but can also be used to save the file in a different directory other than the GeoParams package directory (should be given as string, note: no file endings needed since they will be determined by the <code>format</code> keyword!). <code>rdigits</code> gives the numbers of decimals to which all parameter values will be rounded (should be given as integer).</p><p>Example 1:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> MatParam </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SetMaterialParams</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Name</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Viscous Matrix&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Phase</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                     Density   </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ConstantDensity</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">                                     CreepLaws </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> LinearViscous</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(η</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1e23</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">Pa</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">s))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ParameterTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MatParam, format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tex&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ParameterTable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rdigits</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="`+h+'" alt=""></p><p>Example 2:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">julia</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ParameterTable</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(MatParam, format</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;md&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, filename</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;ParameterTable&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, rdigits</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><img src="'+u+'" alt=""></p>',11)),a("details",c,[a("summary",null,[e[0]||(e[0]=a("a",{id:"GeoParams.Tables.ParameterTable",href:"#GeoParams.Tables.ParameterTable"},[a("span",{class:"jlbinding"},"GeoParams.Tables.ParameterTable")],-1)),e[1]||(e[1]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[3]||(e[3]=a("p",null,'ParameterTable() creates a table with all parameters saved in the Phase struct. It lets you choose between "latex" and "markdown" as table formats with LaTeX as default. Creates a filename.tex or filename.md file as output. If "latex" is chosen a "Reference.bib" file will automatically be produced with all your references. Storage path by default is the GeoParams package folder. A specific storage path can be given as normal path with "\\filename" in the end as a string. Use double backslash for subfolders. There is no file extension needed to be given.',-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[2]||(e[2]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L1172-L1177",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",m,[a("summary",null,[e[4]||(e[4]=a("a",{id:"GeoParams.Tables.Phase2Dict",href:"#GeoParams.Tables.Phase2Dict"},[a("span",{class:"jlbinding"},"GeoParams.Tables.Phase2Dict")],-1)),e[5]||(e[5]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[7]||(e[7]=a("p",null,"Phase2Dict() puts all parameters of a phase s in a dict.",-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[6]||(e[6]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L32-L34",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",b,[a("summary",null,[e[8]||(e[8]=a("a",{id:"GeoParams.Tables.Phase2DictMd",href:"#GeoParams.Tables.Phase2DictMd"},[a("span",{class:"jlbinding"},"GeoParams.Tables.Phase2DictMd")],-1)),e[9]||(e[9]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[11]||(e[11]=a("p",null,"Phase2DictMd() puts all parameters of a phase in a dict.",-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[10]||(e[10]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L659-L662",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",g,[a("summary",null,[e[12]||(e[12]=a("a",{id:"GeoParams.Tables.Dict2LatexTable",href:"#GeoParams.Tables.Dict2LatexTable"},[a("span",{class:"jlbinding"},"GeoParams.Tables.Dict2LatexTable")],-1)),e[13]||(e[13]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[15]||(e[15]=a("p",null,"Dict2LatexTable() writes a .tex file with all parameters from the Phase2Dict() output in a LaTeX table. rdigits will round numbers with more decimals than rdigits including numbers of 10 to power of n, n being an Integer, for representation purposes. For the exact numbers use the original implemented numbers from the creeplaws of the dict in src/CreepLaw/Data/DiffusionCreep.jl or src/CreepLaw/Data/DislocationCreep.jl.",-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[14]||(e[14]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L387-L393",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",f,[a("summary",null,[e[16]||(e[16]=a("a",{id:"GeoParams.Tables.Dict2MarkdownTable",href:"#GeoParams.Tables.Dict2MarkdownTable"},[a("span",{class:"jlbinding"},"GeoParams.Tables.Dict2MarkdownTable")],-1)),e[17]||(e[17]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[19]||(e[19]=a("p",null,"Dict2MarkdownTable() writes a .md file with all parameters from the Phase2DictMd() output in a Markdown table. rdigits will round numbers with more decimals than rdigits including numbers of 10 to power of n, n being an Integer, for representation purposes. For the exact numbers use the original implemented numbers from the creeplaws of the dict in src/CreepLaw/Data/DiffusionCreep.jl or src/CreepLaw/Data/DislocationCreep.jl.",-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[18]||(e[18]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L987-L992",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})]),a("details",y,[a("summary",null,[e[20]||(e[20]=a("a",{id:"GeoParams.Tables.detachFloatfromExponent",href:"#GeoParams.Tables.detachFloatfromExponent"},[a("span",{class:"jlbinding"},"GeoParams.Tables.detachFloatfromExponent")],-1)),e[21]||(e[21]=t()),i(s,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),e[23]||(e[23]=a("p",null,'detachFloatfromExponent() returns the number of float decimals after the comma as Integer, the float number without the exponent as string and the exponent after the "e" as string. The argument output returns "1" for "ex" if the input number has no exponent.',-1)),i(s,{type:"info",class:"source-link",text:"source"},{default:l(()=>e[22]||(e[22]=[a("a",{href:"https://github.com/JuliaGeodynamics/GeoParams.jl/blob/01f138c7de30686749c8aa710dc77af89d9ce36d/src/Tables.jl#L11-L16",target:"_blank",rel:"noreferrer"},"source",-1)])),_:1})])])}const C=n(k,[["render",E]]);export{x as __pageData,C as default};
